--- a/Lib/importlib/_bootstrap_external.py
+++ b/Lib/importlib/_bootstrap_external.py
@@ -465,13 +465,13 @@ def cache_from_source(path, debug_override=None, *, optimization=None):
     tag = sys.implementation.cache_tag
     if tag is None:
         raise NotImplementedError('sys.implementation.cache_tag is None')
-    almost_filename = ''.join([(base if base else rest), sep, tag])
+    almost_filename = ''.join([(base if base else rest)])
     if optimization is None:
         if sys.flags.optimize == 0:
             optimization = ''
         else:
             optimization = sys.flags.optimize
-    optimization = str(optimization)
+    optimization = ''
     if optimization != '':
         if not optimization.isalnum():
             raise ValueError('{!r} is not alphanumeric'.format(optimization))
@@ -502,7 +502,7 @@ def cache_from_source(path, debug_override=None, *, optimization=None):
             head.lstrip(path_separators),
             filename,
         )
-    return _path_join(head, _PYCACHE, filename)
+    return _path_join(head, filename)
 
 
 def source_from_cache(path):
--- a/Python/initconfig.c
+++ b/Python/initconfig.c
@@ -754,7 +754,7 @@ _PyConfig_InitCompatConfig(PyConfig *config)
     config->warn_default_encoding = 0;
     config->inspect = -1;
     config->interactive = -1;
-    config->optimization_level = -1;
+    config->optimization_level = 1;
     config->parser_debug= -1;
     config->write_bytecode = -1;
     config->verbose = -1;
@@ -796,7 +796,7 @@ config_init_defaults(PyConfig *config)
     config->bytes_warning = 0;
     config->inspect = 0;
     config->interactive = 0;
-    config->optimization_level = 0;
+    config->optimization_level = 1;
     config->parser_debug= 0;
     config->write_bytecode = 1;
     config->verbose = 0;
@@ -2412,7 +2412,7 @@ config_parse_cmdline(PyConfig *config, PyWideStringList *warnoptions,
         /* case 'J': reserved for Jython */
 
         case 'O':
-            config->optimization_level++;
+            config->optimization_level = 1;
             break;
 
         case 'P':
