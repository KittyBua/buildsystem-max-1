From 6a80963496797291410a8f5bbaf063d4940609a0 Mon Sep 17 00:00:00 2001
From: Jaedon Shin <jaedon.shin@gmail.com>
Date: Tue, 27 Nov 2018 14:21:30 +0900
Subject: [PATCH] qcacld-2.0: Make driver compatiable with mainline kernel

Signed-off-by: Jaedon Shin <jaedon.shin@gmail.com>
---
 CORE/CLD_TXRX/TXRX/ol_tx.c                   |  2 +-
 CORE/HDD/inc/wlan_hdd_wmm.h                  |  7 +++--
 CORE/HDD/src/wlan_hdd_main.c                 | 23 ++++++++------
 CORE/HDD/src/wlan_hdd_wmm.c                  |  7 +++--
 CORE/SERVICES/COMMON/adf/adf_nbuf.c          | 11 +++++++
 CORE/SERVICES/COMMON/adf/linux/qdf_crypto.c  |  6 ++++
 CORE/SVC/src/logging/wlan_logging_sock_svc.c | 11 +++++++
 CORE/VOSS/inc/vos_cnss.h                     | 32 ++++++++++++++++++++
 CORE/VOSS/src/vos_api.c                      |  4 +++
 CORE/VOSS/src/vos_packet.c                   | 11 +++++++
 CORE/VOSS/src/vos_timer.c                    | 11 +++++++
 Kbuild                                       |  5 ++-
 12 files changed, 112 insertions(+), 18 deletions(-)

diff --git a/CORE/CLD_TXRX/TXRX/ol_tx.c b/CORE/CLD_TXRX/TXRX/ol_tx.c
index 250bb4af6b8a..0555eeeb8d2d 100644
--- a/CORE/CLD_TXRX/TXRX/ol_tx.c
+++ b/CORE/CLD_TXRX/TXRX/ol_tx.c
@@ -785,7 +785,7 @@ void ol_tx_vdev_ll_pause_queue_send(void *context)
 {
 #ifdef QCA_SUPPORT_TXRX_VDEV_LL_TXQ
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 15, 0)
-    struct ol_txrx_vdev_t *vdev = from_timer(vdev, t, bundle_queue.timer);
+    struct ol_txrx_vdev_t *vdev = from_timer(vdev, t, ll_pause.timer);
 #else
     struct ol_txrx_vdev_t *vdev = (struct ol_txrx_vdev_t *) context;
 #endif
diff --git a/CORE/HDD/inc/wlan_hdd_wmm.h b/CORE/HDD/inc/wlan_hdd_wmm.h
index f5fdd866e784..c0f216aad1b7 100644
--- a/CORE/HDD/inc/wlan_hdd_wmm.h
+++ b/CORE/HDD/inc/wlan_hdd_wmm.h
@@ -269,8 +269,11 @@ v_U16_t hdd_wmm_select_queue(struct net_device * dev, struct sk_buff *skb);
   ===========================================================================*/
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,19,0))
 uint16_t hdd_hostapd_select_queue(struct net_device * dev, struct sk_buff *skb,
-                                  struct net_device *sb_dev,
-                                  select_queue_fallback_t fallback);
+                                  struct net_device *sb_dev
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0))
+                                  , select_queue_fallback_t fallback
+#endif
+                                  );
 #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3,14,0))
 uint16_t hdd_hostapd_select_queue(struct net_device * dev, struct sk_buff *skb,
                                   void *accel_priv,
diff --git a/CORE/HDD/src/wlan_hdd_main.c b/CORE/HDD/src/wlan_hdd_main.c
index 3738635dbe8e..948a09e73866 100644
--- a/CORE/HDD/src/wlan_hdd_main.c
+++ b/CORE/HDD/src/wlan_hdd_main.c
@@ -10944,8 +10944,11 @@ static void hdd_set_multicast_list(struct net_device *dev)
   --------------------------------------------------------------------------*/
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 19, 0))
 uint16_t hdd_select_queue(struct net_device *dev, struct sk_buff *skb,
-			  struct net_device *sb_dev,
-			  select_queue_fallback_t fallback)
+			  struct net_device *sb_dev
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0))
+              , select_queue_fallback_t fallback
+#endif
+              )
 #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 14, 0))
 uint16_t hdd_select_queue(struct net_device *dev, struct sk_buff *skb,
 			  void *accel_priv, select_queue_fallback_t fallback)
@@ -13350,13 +13353,13 @@ static void hdd_populate_fils_params(struct cfg80211_connect_resp_params
                      uint16_t fils_seq_num)
 {
     /* Increament seq number to be used for next FILS */
-    fils_params->fils_erp_next_seq_num = fils_seq_num + 1;
-    fils_params->update_erp_next_seq_num = true;
-    fils_params->fils_kek = fils_kek;
-    fils_params->fils_kek_len = fils_kek_len;
-    fils_params->pmk = pmk;
-    fils_params->pmk_len = pmk_len;
-    fils_params->pmkid = pmkid;
+    fils_params->fils.erp_next_seq_num = fils_seq_num + 1;
+    fils_params->fils.update_erp_next_seq_num = true;
+    fils_params->fils.kek = fils_kek;
+    fils_params->fils.kek_len = fils_kek_len;
+    fils_params->fils.pmk = pmk;
+    fils_params->fils.pmk_len = pmk_len;
+    fils_params->fils.pmkid = pmkid;
 }
 #else /* CFG80211_FILS_SK_OFFLOAD_SUPPORT */
 static inline void hdd_populate_fils_params(struct cfg80211_connect_resp_params
@@ -13422,7 +13425,7 @@ static void hdd_connect_done(struct net_device *dev, const u8 *bssid,
     }
     hddLog(LOG1, "FILS indicate connect status %d seq no %d",
           fils_params.status,
-          fils_params.fils_erp_next_seq_num);
+          fils_params.fils.erp_next_seq_num);
 
     cfg80211_connect_done(dev, &fils_params, gfp);
 
diff --git a/CORE/HDD/src/wlan_hdd_wmm.c b/CORE/HDD/src/wlan_hdd_wmm.c
index 2064904288a3..7c59a0842118 100644
--- a/CORE/HDD/src/wlan_hdd_wmm.c
+++ b/CORE/HDD/src/wlan_hdd_wmm.c
@@ -1839,8 +1839,11 @@ hdd_wmm_classify_pkt(hdd_adapter_t* pAdapter, struct sk_buff *skb,
   ===========================================================================*/
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,19,0))
 uint16_t hdd_hostapd_select_queue(struct net_device * dev, struct sk_buff *skb,
-				  struct net_device *sb_dev,
-				  select_queue_fallback_t fallback)
+				  struct net_device *sb_dev
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0))
+              , select_queue_fallback_t fallback
+#endif
+              )
 #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3,14,0))
 uint16_t hdd_hostapd_select_queue(struct net_device * dev, struct sk_buff *skb,
 				  void *accel_priv,
diff --git a/CORE/SERVICES/COMMON/adf/adf_nbuf.c b/CORE/SERVICES/COMMON/adf/adf_nbuf.c
index e2c47286d5d2..7e935e3c016a 100644
--- a/CORE/SERVICES/COMMON/adf/adf_nbuf.c
+++ b/CORE/SERVICES/COMMON/adf/adf_nbuf.c
@@ -2429,6 +2429,17 @@ uint16_t adf_nbuf_construct_radiotap(
 	return rthdr->it_len;
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,5,0))
+/**
+ * FIELD_SIZEOF - get the size of a struct's field
+ * @t: the target struct
+ * @f: the target struct's field
+ * Return: the size of @f in the struct definition without having a
+ * declared instance of @t.
+ */
+#define FIELD_SIZEOF(t, f) (sizeof(((t*)0)->f))
+#endif
+
 /**
  * __adf_nbuf_validate_skb_cb() - validate skb CB
  *
diff --git a/CORE/SERVICES/COMMON/adf/linux/qdf_crypto.c b/CORE/SERVICES/COMMON/adf/linux/qdf_crypto.c
index 44088838b857..19a17cb4bf6e 100644
--- a/CORE/SERVICES/COMMON/adf/linux/qdf_crypto.c
+++ b/CORE/SERVICES/COMMON/adf/linux/qdf_crypto.c
@@ -72,7 +72,9 @@ int qdf_get_hash(uint8_t *type,
     } desc;
 
     desc.shash.tfm = tfm;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0))
     desc.shash.flags = 0;
+#endif
     ret = crypto_shash_init(&desc.shash);
     if (ret)
         goto fail;
@@ -105,7 +107,9 @@ int qdf_get_hmac_hash(uint8_t *type, uint8_t *key,
     } desc;
 
     desc.shash.tfm = tfm;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0))
     desc.shash.flags = 0;
+#endif
     ret = crypto_shash_setkey(desc.shash.tfm, key, keylen);
     if (ret)
         goto fail;
@@ -175,7 +179,9 @@ int qdf_get_keyed_hash(const char *alg, const uint8_t *key,
     do {
         SHASH_DESC_ON_STACK(desc, tfm);
         desc->tfm = tfm;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0))
         desc->flags = crypto_shash_get_flags(tfm);
+#endif
 
         ret = crypto_shash_init(desc);
         if (ret) {
diff --git a/CORE/SVC/src/logging/wlan_logging_sock_svc.c b/CORE/SVC/src/logging/wlan_logging_sock_svc.c
index 6ed6c0418ea5..5b9b041a58ed 100644
--- a/CORE/SVC/src/logging/wlan_logging_sock_svc.c
+++ b/CORE/SVC/src/logging/wlan_logging_sock_svc.c
@@ -273,6 +273,17 @@ static int wlan_queue_logmsg_for_app(void)
 }
 
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0))
+static inline void do_gettimeofday(struct timeval *tv)
+{
+	struct timespec64 now;
+
+	ktime_get_real_ts64(&now);
+	tv->tv_sec = now.tv_sec;
+	tv->tv_usec = now.tv_nsec/1000;
+}
+#endif
+
 int wlan_log_to_user(VOS_TRACE_LEVEL log_level, char *to_be_sent, int length)
 {
 	/* Add the current time stamp */
diff --git a/CORE/VOSS/inc/vos_cnss.h b/CORE/VOSS/inc/vos_cnss.h
index 51e1eaf316e4..498db4f0bdc1 100644
--- a/CORE/VOSS/inc/vos_cnss.h
+++ b/CORE/VOSS/inc/vos_cnss.h
@@ -85,6 +85,23 @@ static inline void vos_flush_delayed_work(void *dwork)
 	cancel_delayed_work_sync(dwork);
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,4,0))
+static void wakeup_source_prepare(struct wakeup_source *ws, const char *name)
+{
+	if (ws) {
+		memset(ws, 0, sizeof(*ws));
+		ws->name = name;
+	}
+}
+
+static inline void wakeup_source_init(struct wakeup_source *ws,
+				      const char *name)
+{
+	wakeup_source_prepare(ws, name);
+	wakeup_source_add(ws);
+}
+#endif
+
 static inline void vos_pm_wake_lock_init(struct wakeup_source *ws,
 					const char *name)
 {
@@ -107,6 +124,14 @@ static inline void vos_pm_wake_lock_release(struct wakeup_source *ws)
 	__pm_relax(ws);
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,1,0))
+static inline void wakeup_source_trash(struct wakeup_source *ws)
+{
+	wakeup_source_remove(ws);
+	__pm_relax(ws);
+}
+#endif
+
 static inline void vos_pm_wake_lock_destroy(struct wakeup_source *ws)
 {
 	wakeup_source_trash(ws);
@@ -119,6 +144,13 @@ static inline int vos_wlan_pm_control(bool vote)
 static inline void vos_lock_pm_sem(void) { return; }
 static inline void vos_release_pm_sem(void) { return; }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,20,0))
+static inline void get_monotonic_boottime(struct timespec *ts)
+{
+	*ts = ktime_to_timespec(ktime_get_boottime());
+}
+#endif
+
 static inline void vos_get_monotonic_bootime_ts(struct timespec *ts)
 {
 	get_monotonic_boottime(ts);
diff --git a/CORE/VOSS/src/vos_api.c b/CORE/VOSS/src/vos_api.c
index 6ddc04f5edbe..68527e7f336b 100644
--- a/CORE/VOSS/src/vos_api.c
+++ b/CORE/VOSS/src/vos_api.c
@@ -3250,7 +3250,11 @@ v_U64_t vos_get_monotonic_boottime_ns(void)
 #if (LINUX_VERSION_CODE > KERNEL_VERSION(3, 10, 0))
 v_U64_t vos_get_bootbased_boottime_ns(void)
 {
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,3,0))
+	return ktime_get_boottime_ns();
+#else
 	return ktime_get_boot_ns();
+#endif
 }
 
 #else
diff --git a/CORE/VOSS/src/vos_packet.c b/CORE/VOSS/src/vos_packet.c
index c0381e89c052..01012a725c80 100644
--- a/CORE/VOSS/src/vos_packet.c
+++ b/CORE/VOSS/src/vos_packet.c
@@ -321,6 +321,17 @@ v_U8_t vos_pkt_get_proto_type
 }
 
 #ifdef QCA_PKT_PROTO_TRACE
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0))
+static inline void do_gettimeofday(struct timeval *tv)
+{
+	struct timespec64 now;
+
+	ktime_get_real_ts64(&now);
+	tv->tv_sec = now.tv_sec;
+	tv->tv_usec = now.tv_nsec/1000;
+}
+#endif
+
 /**
  * vos_pkt_trace_buf_update - Update storage buffer with interested event string
  * @event_string: A string for packet type or outstanding event
diff --git a/CORE/VOSS/src/vos_timer.c b/CORE/VOSS/src/vos_timer.c
index d38fe59e37d0..c077467dc03c 100644
--- a/CORE/VOSS/src/vos_timer.c
+++ b/CORE/VOSS/src/vos_timer.c
@@ -854,6 +854,17 @@ v_TIME_t vos_timer_get_system_ticks( v_VOID_t )
 }
 
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0))
+static inline void do_gettimeofday(struct timeval *tv)
+{
+	struct timespec64 now;
+
+	ktime_get_real_ts64(&now);
+	tv->tv_sec = now.tv_sec;
+	tv->tv_usec = now.tv_nsec/1000;
+}
+#endif
+
 /*--------------------------------------------------------------------------
 
   \brief vos_timer_get_system_time() - Get the system time in milliseconds
diff --git a/Kbuild b/Kbuild
index bfc58371add3..8f5a8cd89d32 100644
--- a/Kbuild
+++ b/Kbuild
@@ -192,7 +192,7 @@ CONFIG_WLAN_FEATURE_SAE := y
 # Feature flags which are not (currently) configurable via Kconfig
 
 #Whether to build debug version
-BUILD_DEBUG_VERSION := 1
+BUILD_DEBUG_VERSION := 0
 
 #Enable this flag to build driver in diag version
 BUILD_DIAG_VERSION := 1
@@ -980,7 +980,7 @@ WDI_INC :=	$(WDI_CP_INC) \
 
 WCNSS_INC :=	-I$(WLAN_ROOT)/wcnss/inc
 
-LINUX_INC :=	-Iinclude/linux
+LINUX_INC :=	-I$(srctree)/include/linux
 
 INCS :=		$(HDD_INC) \
 		$(EPPING_INC) \
@@ -1056,7 +1056,6 @@ CDEFINES :=	-DANI_LITTLE_BYTE_ENDIAN \
 		-DWLAN_PERF \
 		-DPTT_SOCK_SVC_ENABLE \
 		-Wall\
-		-Werror\
 		-D__linux__ \
 		-DHAL_SELF_STA_PER_BSS=1 \
 		-DWLAN_FEATURE_VOWIFI_11R \
-- 
2.21.0 (Apple Git-122)

