diff --git a/acinclude.m4 b/acinclude.m4
index b0a9ab28e..cb4390090 100644
--- a/acinclude.m4
+++ b/acinclude.m4
@@ -9,6 +9,11 @@ AC_ARG_WITH(target,
 	[TARGET="$withval"],
 	[TARGET="native"])
 
+AC_ARG_WITH(targetrootprefix,
+	AS_HELP_STRING([--with-targetrootprefix=PATH], [prefix relative to target root (only applicable in native mode)]),
+	[TARGET_ROOT_PREFIX="$withval"],
+	[TARGET_ROOT_PREFIX=""])
+
 AC_ARG_WITH(targetprefix,
 	AS_HELP_STRING([--with-targetprefix=PATH], [prefix relative to target root (only applicable in cdk mode)]),
 	[TARGET_PREFIX="$withval"],
@@ -161,6 +166,7 @@ if test "$TARGET" = "native"; then
 	targetprefix=$prefix
 	TARGET_PREFIX=$prefix
 	AC_DEFINE_UNQUOTED(TARGET_PREFIX, "$TARGET_PREFIX", [The targets prefix])
+	AC_DEFINE_UNQUOTED(TARGET_ROOT_PREFIX, "$TARGET_ROOT_PREFIX", [The targets root prefix native])
 elif test "$TARGET" = "cdk"; then
 	AC_MSG_RESULT(cdk)
 
diff --git a/src/eitd/sectionsd.cpp b/src/eitd/sectionsd.cpp
index 338a2de8e..568b7b945 100644
--- a/src/eitd/sectionsd.cpp
+++ b/src/eitd/sectionsd.cpp
@@ -1505,7 +1505,7 @@ void CTimeThread::run()
 		dvb_time = 0;
 		timediff = 0;
 
-		if (ntpenable && system( ntp_system_cmd.c_str() ) == 0) {
+		if (ntpenable /*&& system( ntp_system_cmd.c_str() ) == 0*/) {
 			time_ntp = true;
 			success = true;
 		} else if (dvb_time_update) {
diff --git a/src/global.h b/src/global.h
index 1211e1f40..593878885 100644
--- a/src/global.h
+++ b/src/global.h
@@ -114,4 +114,8 @@ NEUTRINO_CPP CRadioTextGUI *g_RadiotextWin;
 #define TARGET_PREFIX ""
 #endif
 
+#ifndef TARGET_ROOT_PREFIX
+#define TARGET_ROOT_PREFIX ""
+#endif
+
 #endif /* __neutrino_global_h__ */
diff --git a/src/neutrino.cpp b/src/neutrino.cpp
index eeb6c3c05..fcd9e0c77 100644
--- a/src/neutrino.cpp
+++ b/src/neutrino.cpp
@@ -684,7 +683,7 @@ int CNeutrinoApp::loadSetup(const char *fname)
 	g_settings.timezone = configfile.getString("timezone", "(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Vienna");
 
 	// epg
-	g_settings.epg_dir = configfile.getString("epg_dir", "/media/hdd/epg");
+	g_settings.epg_dir = configfile.getString("epg_dir", TARGET_ROOT_PREFIX "/media/hdd/epg");
 	g_settings.epg_cache = configfile.getInt32("epg_cache_time", 7);
 	g_settings.epg_extendedcache = configfile.getInt32("epg_extendedcache_time", 168);
 	g_settings.epg_max_events = configfile.getInt32("epg_max_events", 30000);
@@ -739,11 +738,11 @@ int CNeutrinoApp::loadSetup(const char *fname)
 		g_settings.network_nfs[i].password = configfile.getString("network_nfs_password_" + i_str, "");
 	}
 
-	g_settings.network_nfs_audioplayerdir = configfile.getString("network_nfs_audioplayerdir", "/media/hdd/music");
-	g_settings.network_nfs_moviedir = configfile.getString("network_nfs_moviedir", "/media/hdd/movie");
-	g_settings.network_nfs_picturedir = configfile.getString("network_nfs_picturedir", "/media/hdd/pictures");
-	g_settings.network_nfs_recordingdir = configfile.getString("network_nfs_recordingdir", "/media/hdd/movie");
-	g_settings.network_nfs_streamripperdir = configfile.getString("network_nfs_streamripperdir", "/media/hdd/music/streamripper");
+	g_settings.network_nfs_audioplayerdir = configfile.getString("network_nfs_audioplayerdir", TARGET_ROOT_PREFIX "/media/hdd/music");
+	g_settings.network_nfs_moviedir = configfile.getString("network_nfs_moviedir", TARGET_ROOT_PREFIX "/media/hdd/movie");
+	g_settings.network_nfs_picturedir = configfile.getString("network_nfs_picturedir", TARGET_ROOT_PREFIX "/media/hdd/pictures");
+	g_settings.network_nfs_recordingdir = configfile.getString("network_nfs_recordingdir", TARGET_ROOT_PREFIX "/media/hdd/movie");
+	g_settings.network_nfs_streamripperdir = configfile.getString("network_nfs_streamripperdir", TARGET_ROOT_PREFIX "/media/hdd/music/streamripper");
 
 	g_settings.downloadcache_dir = configfile.getString("downloadcache_dir", g_settings.network_nfs_recordingdir.c_str());
 	g_settings.logo_hdd_dir = configfile.getString("logo_hdd_dir", LOGODIR );
@@ -784,7 +783,7 @@ int CNeutrinoApp::loadSetup(const char *fname)
 	if (g_settings.timeshiftdir.empty())
 	{
 		timeshiftdir = g_settings.network_nfs_recordingdir + "/.timeshift";
-		safe_mkdir(timeshiftdir.c_str());
+		//safe_mkdir(timeshiftdir.c_str());
 	}
 	else
 	{
@@ -919,7 +918,7 @@ int CNeutrinoApp::loadSetup(const char *fname)
 	g_settings.livestreamScriptPath = configfile.getString("livestreamScriptPath", WEBTVDIR);
 
 	// plugins
-	g_settings.plugin_hdd_dir = configfile.getString("plugin_hdd_dir", "/media/hdd/plugins");
+	g_settings.plugin_hdd_dir = configfile.getString("plugin_hdd_dir", TARGET_ROOT_PREFIX "/media/hdd/plugins");
 	g_settings.plugins_disabled = configfile.getString("plugins_disabled", "");
 	g_settings.plugins_game = configfile.getString("plugins_game", "");
 	g_settings.plugins_lua = configfile.getString("plugins_lua", "");
@@ -930,7 +929,7 @@ int CNeutrinoApp::loadSetup(const char *fname)
 	g_settings.movieplayer_plugin = configfile.getString("movieplayer_plugin", "---");
 
 	// screenshot
-	g_settings.screenshot_dir = configfile.getString("screenshot_dir", "/media/hdd/pictures");
+	g_settings.screenshot_dir = configfile.getString("screenshot_dir", TARGET_ROOT_PREFIX "/media/hdd/pictures");
 	g_settings.screenshot_count = configfile.getInt32("screenshot_count", 1);
 	g_settings.screenshot_cover = configfile.getInt32("screenshot_cover", 0);
 	g_settings.screenshot_format = configfile.getInt32("screenshot_format", 1);
@@ -3187,9 +2990,9 @@ TIMER_START();
 
 	InitZapper();
 
-	CHDDDestExec * hdd = new CHDDDestExec();
-	hdd->exec(NULL, "");
-	delete hdd;
+	//CHDDDestExec * hdd = new CHDDDestExec();
+	//hdd->exec(NULL, "");
+	//delete hdd;
 
 	hintBox->hide(); // InitZapper also displays a hintbox
 	delete hintBox;
@@ -5552,7 +5355,7 @@ void stop_daemons(bool stopall, bool for_flash)
 		delete InfoClock;
 	if(FileTimeOSD)
 		delete FileTimeOSD;
-	delete &CMoviePlayerGui::getInstance();
+//	delete &CMoviePlayerGui::getInstance();
 
 	CZapit::getInstance()->Stop();
 	printf("zapit shutdown done\n");
diff --git a/src/nhttpd/nhttpd.conf.in b/src/nhttpd/nhttpd.conf.in
index f22ffa825..646cff6e3 100644
--- a/src/nhttpd/nhttpd.conf.in
+++ b/src/nhttpd/nhttpd.conf.in
@@ -3,7 +3,7 @@ Language.selected=Deutsch
 Tuxbox.LogosURL=@TARGET_PUBLIC_HTTPDDIR@/logo
 WebsiteMain.directory=@TARGET_PRIVATE_HTTPDDIR@
 WebsiteMain.override_directory=@TARGET_PUBLIC_HTTPDDIR@
-WebsiteMain.port=80
+WebsiteMain.port=8080
 WebsiteMain.hosted_directory=@TARGET_HOSTED_HTTPDDIR@
 configfile.version=4
 mod_auth.authenticate=false
