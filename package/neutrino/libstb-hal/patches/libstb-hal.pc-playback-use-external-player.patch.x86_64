--- a/libgeneric-pc/playback.cpp
+++ b/libgeneric-pc/playback.cpp
@@ -1,6 +1,7 @@
 #include <stdio.h>
 
 #include "playback_lib.h"
+#include <stdlib.h>
 
 static const char * FILENAME = "playback-dummy";
 
@@ -11,17 +12,57 @@
 
 void cPlayback::Close(void)
 {
+	char cmd[64] = {0};
+	snprintf(cmd,sizeof(cmd),"killall mpv &");
+	printf("[3]###########[%s]##############\n",cmd);
+	system(cmd);
 }
 
 bool cPlayback::Start(std::string filename, std::string headers)
 {
+	static std::string tmp_filename = "";
+	static unsigned int cnt = 0;
+	char cmd[1024] = {0};
+
+	if (tmp_filename != filename)
+	{
+		snprintf(cmd,sizeof(cmd),"mpv '%s' &",filename.c_str());
+		printf("[1]###########[%s]##############\n",cmd);
+		system(cmd);
+		tmp_filename = filename ;
+		cnt = 0;
+	}
+	else
+	{
+		printf("REPEAT %i ########################%s#####################\n",cnt++,filename.c_str());
+		return false;
+	}
 	return Start((char*) filename.c_str(),0,0,0,0,0, headers);
 }
 
 bool cPlayback::Start(char *filename, int vpid, int vtype, int apid, int ac3, int duration, std::string /*headers*/)
 {
+	static std::string tmp_filename = "";
+	static unsigned int cnt = 0;
 	printf("%s:%s - filename=%s vpid=%u vtype=%d apid=%u ac3=%d duration=%i\n",
 		FILENAME, __func__, filename, vpid, vtype, apid, ac3, duration);
+
+	char cmd[1024] = {0};
+	std::string tmp = filename;
+
+	if (tmp_filename != tmp)
+	{
+		snprintf(cmd,sizeof(cmd),"mpv '%s' &",filename);
+		printf("[2]###########[%s]##############\n",cmd);
+		system(cmd);
+		tmp_filename = filename ;
+		cnt = 0;
+	}
+	else
+	{
+		printf("REPEAT %i ########################%s#####################\n",cnt++,filename);
+		return false;
+	}
 	return true;
 }
 
